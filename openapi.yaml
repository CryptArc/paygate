openapi: 3.0.2
info:
  description: Paygate is a RESTful API enabling Automated Clearing House ([ACH](https://en.wikipedia.org/wiki/Automated_Clearing_House)) transactions to be submitted and received without a deep understanding of a full NACHA file specification.
  version: v1
  title: Paygate API
  contact:
    url: https://github.com/moov-io/paygate
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8082
    description: Local development

tags:
  - name: Customers
    description: Customer objects are an individual or business used to perform transfer's with an originator and track multiple transactions associated with the customer. The API allows you to create, delete, and update your customers. You can retrieve individual customers as well as a list of all your customers. (Entry Detail)
  - name: Depositories
    description: Depository objects represent a US bank or credit union that funds can be debited or credit from a transfer. A Depository must be associated with a customer or an originator. The API allows you to create, delete, and update your depositories. You can retrieve individual depositories as well as a list of all your depositories.
  - name: Events
    description: Event objects are a notification of a state change of a resource. When an Event is created any active webhooks will be notified.
  - name: Gateways
    description: Gateway objects identify the origin (sending point) and destination (receiving point) of the entries to be transferred. (File Header)
  - name: Originators
    description: Originator objects are an organization or person that initiates an ACH Transfer to a Customer account either as a debit or credit. The API allows you to create, delete, and update your originators. You can retrieve individual originators as well as a list of all your originators. (Batch Header)
  - name: Transfers
    description: Transfer objects create a transaction initiated by an originator to a customer with a defined flow and fund amount. The API allows you to create or delete a transfers while the status of the transfer is pending.

paths:
  /originators:
    get:
      tags:
      - Originators
      summary: Gets a list of Originators
      operationId: getOriginators
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A list of Originator objects
          headers:
            X-Total-Count:
              description: The total number of Originators
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Originators'
    post:
      tags:
      - Originators
      summary: Create a new Originator object
      operationId: addOriginator
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/idempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginator'
      responses:
        '201':
          description: A JSON object containing a new Originator
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Originator'
        '400':
          description: "Invalid Originator Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /originators/{originatorId}:
    get:
      tags:
      - Originators
      summary: Retrieves the details of an existing Originator. You need only supply the unique Originator identifier that was returned upon customer creation.
      operationId: getOriginatorByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: originatorId
          in: path
          description: Originator ID
          required: true
          schema:
            type: string
            example: 3f2d23ee
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: A Originator object for the supplied ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Originator'
        '404':
          description: A resource with the specified ID was not found
    patch:
      tags:
      - Originators
      summary: Updates the specified Originator by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: updateOriginator
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: originatorId
          in: path
          description: Originator ID
          required: true
          schema:
            type: string
            example: 3f2d23ee
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOriginator'
      responses:
        '201':
          description: A JSON object containing a new Originator
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Originator'
        '400':
          description: "Invalid Originator Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Originators
      summary: Permanently deletes an Originator and associated Customers, Depositories, and Transfers. It cannot be undone. Also immediately cancels any active Transfers for the Originator.
      operationId: deleteOriginator
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: originatorId
          in: path
          description: Originator ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/requestId'
      responses:
          '200':
            description: Permanently deleted Originator.
          '404':
            description: A originator with the specified ID was not found.

# CUSTOMERS
  /customers:
    get:
      tags:
      - Customers
      summary: Gets a list of Customers
      operationId: getCustomers
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Customer objects
          headers:
            X-Total-Count:
              description: The total number of Customers
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
    post:
      tags:
      - Customers
      summary: Create a new Customer object
      operationId: addCustomers
      security:
        - bearerAuth: []
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      responses:
        '201':
          description: A JSON object containing a new Customer
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: "Invalid Customer Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /customers/{customerId}:
    get:
      tags:
      - Customers
      summary: Get a Customer by ID
      operationId: getCustomerByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: feb492e6
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A Customer object for the supplied Customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: A customer object with the specified ID was not found.
    patch:
      tags:
      - Customers
      summary: Updates the specified Customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: updateCustomer
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: feb492e6
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '201':
          description: A JSON object containing a new Customer
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: "Invalid Customer Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: A customer object with the specified ID was not found.
    delete:
      tags:
        - Customers
      summary: Permanently deletes a customer and associated depositories and transfers. It cannot be undone. Immediately cancels any active Transfers for the customer.
      operationId: deleteCustomer
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
      - name: customerId
        in: path
        description: Customer ID
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/bearerToken'
      - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Permanently deleted Customer.
        '404':
          description: A customer with the specified ID was not found.
  /customers/{customerId}/depositories:
    get:
      tags:
      - Customers
      summary: Get a list of Depository accounts for a Customer
      operationId: getDepositoriesByCustomerID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: feb492e6
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Depository objects for a Customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depositories'
  /customers/{customerId}/depositories/{depositoryId}:
    get:
      tags:
      - Customers
      summary: Get a Depository accounts for a Customer based on it's ID
      operationId: getDepositoriesByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: customerId
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: feb492e6
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
            example: 0c5e215c
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A Depository objects for the supplied ID
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depository'
        '404':
          description: A resource object with the specified ID was not found.

# DEPOSITORIES
  /depositories:
    get:
      tags:
      - Depositories
      summary: A list of all Depository objects for the authentication context.
      operationId: getDepositories
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Depository objects
          headers:
            X-Total-Count:
              description: The total number of Depositories
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depositories'
    post:
      tags:
      - Depositories
      summary: Create a new depository account for the authenticated user
      operationId: addDepository
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDepository'
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depository'
        '400':
          description: "Invalid Depository Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /depositories/{depositoryId}:
    get:
      tags:
      - Depositories
      summary: Get a Depository object for the supplied ID
      operationId: getDepositoryByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
            example: 0c5e215c
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A depository object for the supplied ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depository'
        '404':
          description: A resource object with the specified ID was not found.
    patch:
      tags:
      - Depositories
      summary: Updates the specified Depository by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      operationId: updateDepository
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
            example: feb492e6
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDepository'
      responses:
        '201':
          description: A JSON object containing a new Depository
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Depository'
        '400':
          description: "Invalid Depository Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: A resource object with the specified ID was not found.
    delete:
      tags:
      - Depositories
      summary: Permanently deletes a depository and associated transfers. It cannot be undone. Immediately cancels any active Transfers for the depository.
      operationId: deleteDepository
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Permanently deleted Depository.
        '404':
          description: A depository with the specified ID was not found.
  /depositories/{depositoryId}/micro-deposits:
    post:
      tags:
      - Depositories
      summary: Initiates micro deposits to be sent to the Depository institution for account validation
      operationId: initiateMicroDeposits
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
            example: feb492e6
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: Micro deposits initiated
        '400':
          description: Problem initiating micro deposts, see error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /depositories/{depositoryId}/micro-deposits/confirm:
    post:
      tags:
        - Depositories
      summary: Confirm micro deposit amounts after they have been posted to the depository account
      operationId:
        confirmMicroDeposits
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: depositoryId
          in: path
          description: Depository ID
          required: true
          schema:
            type: string
            example: 978e6ddb
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Amounts'
      responses:
        '200':
          description: Micro deposits confirmed
        '400':
          description: Invalid Amounts
        '404':
          description: A depository with the specified ID was not found.
        '409':
          description: Too many attempts. Bank already verified.

# TRANSFERS
  /transfers:
    get:
      tags:
      - Transfers
      summary: A list of all Transfer objects
      operationId: getTransfers
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Transfer objects
          headers:
            X-Total-Count:
              description: The total number of Transfers
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
    post:
      tags:
      - Transfers
      summary: Create a new transfer between an Originator and a Customer. Transfers cannot be modified. Instead delete the old and create a new transfer.
      operationId: addTransfer
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      security:
        - bearerAuth: []
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransfer'
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '400':
          description: "Invalid Transfer Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transfers/batch:
    post:
      tags:
        - Transfers
      summary: Create a new list of transfer, validate, build, and process. Transfers cannot be modified.
      operationId: addTransfers
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      security:
        - bearerAuth: []
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransfers'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfers'
        '400':
          description: "Invalid Transfer(s) Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transfers/{transferId}:
    get:
      tags:
      - Transfers
      summary: Get a Transfer object for the supplied ID
      operationId: getTransferByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: transferId
          in: path
          description: Transfer ID
          required: true
          schema:
            type: string
            example: 33164ac6
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A transfer object for the supplied ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
        '404':
          description: A resource object with the specified ID was not found.
    delete:
      tags:
      - Transfers
      summary: It is possible to recall (delete) a transfer before it has been released from the financial institution.
      operationId: deleteTransferByID
      parameters:
        - name: transferId
          in: path
          description: Transfer ID
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/requestId'
      security:
        - bearerAuth: []
        - cookieAuth: []
      responses:
        '200':
          description: Transfer has been deleted.
        '404':
          description: A transfer with the specified ID was not found.
  /transfers/{transferId}/failed:
    post:
      tags:
        - Transfers
      summary: Get the NACHA return code and description
      operationId: getTransferNachaCode
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: transferId
          in: path
          description: Transfer ID
          required: true
          schema:
            type: string
            example: 33164ac6
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/idempotencyKey'
      responses:
        '200':
          description: 'TODO(adam): check error json'
        '404':
          description: Returned if no errors were found.
  /transfers/{transferId}/files:
    post:
      tags:
        - Transfers
      summary: Get the ACH files to be used in this transfer.
      operationId: getTransferFiles
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: transferId
          in: path
          description: Transfer ID
          required: true
          schema:
            type: string
            example: 33164ac6
        - $ref: '#/components/parameters/requestId'
        - $ref: '#/components/parameters/idempotencyKey'
      responses:
        '200':
          description: The ACH files generated for a transfer.
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/ach/master/openapi.yml#/components/schemas/Files'
        '400':
          description: ACH files failed validation, check response body.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transfers/{transferId}/events:
    get:
      tags:
      - Transfers
      summary: Get all Events associated with the Transfer object's for the supplied ID
      operationId: getTransferEventsByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: transferId
          in: path
          description: Transfer ID
          required: true
          schema:
            type: string
            example: 33164ac6
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Event objects for the supplied Transfer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
        '404':
          description: A resource object with the specified ID was not found.

# EVENTS
  /events:
    get:
      tags:
      - Events
      summary: Gets a list of Events
      operationId: getEvents
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Event objects
          headers:
            X-Total-Count:
              description: The total number of Events
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
  /events/{eventId}:
    get:
      tags:
      - Events
      summary: Get a Event by ID
      operationId: getEventByID
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - name: eventId
          in: path
          description: Event ID
          required: true
          schema:
            type: string
            example: 94cf1126
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A Event object for the supplied Customer ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: A event object with the specified ID was not found.

# GATEWAYS
  /gateways:
    get:
      tags:
        - Gateways
      summary: Gets a list of Gatways
      operationId: getGateways
      security:
        - bearerAuth: []
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: A list of Gateway objects
          headers:
            X-Total-Count:
              description: The total number of Events
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateways'
    post:
      tags:
      - Gateways
      summary: Create a new Gateway object
      operationId: addGateway
      parameters:
        - $ref: '#/components/parameters/idempotencyKey'
        - $ref: '#/components/parameters/requestId'
      security:
        - bearerAuth: []
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGateway'
      responses:
        '201':
          description: Created
          headers:
            Location:
              description: The location of the new resource
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gateway'
        '400':
          description: "Invalid Gateway Object"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Amounts:
      description: A JSON array of currency amounts
      required:
        - amounts
      properties:
        amounts:
          type: array
          items:
            type: string
          example: ["USD 0.02", "USD -0.03"]
    Error:
      required:
        - error
      properties:
        error:
          type: string
          description: An error message describing the problem intended for humans.
          example: Validation error(s) present.
    CreateOriginator:
      properties:
        defaultDepository:
          type: string
          description: The depository account to be used by default per transfer. ID must be a valid Originator Depository account
          example: 0c0c3412
        identification:
          type: string
          maxLength: 14
          description: An identification number by which the customer is known to the originator.
        metadata:
          type: string
          description: Additional meta data to be used for display only
          example: Primary payment account
      required:
        - defaultDepository
        - identification
    Originator:
      properties:
        id:
          type: string
          description: Originator ID
          example: 724b6abe
        defaultDepository:
          type: string
          description: The depository account to be used by default per transfer. ID must be a valid Originator Depository account
          example: 0c0c3412
        identification:
          type: string
          maxLength: 14
          description: An identification number by which the customer is known to the originator.
          example:
        metadata:
          type: string
          description: Additional meta data to be used for display only
          example: Primary payment account
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
        updated:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
    Originators:
      type: array
      items:
        $ref: '#/components/schemas/Originator'
    CreateCustomer:
      properties:
        email:
          type: string
          description: The customers email address
          example: "example@moov.io"
          format: e-mail
        defaultDepository:
          type: string
          description: The depository account to be used by default per transfer. ID must be a valid Customer Depository account
          example: 0c5e215c
        metadata:
          type: string
          example: 'Authorized for re-occurring WEB'
          description: Additional meta data to be used for display only
      required:
        - email
        - defaultDepository
    Customer:
      properties:
        id:
          type: string
          description: Customer ID
          example: feb492e6
        email:
          type: string
          description: The customers email address
          format: e-mail
          example: user@example.com
        defaultDepository:
          type: string
          description: The depository account to be used by default per transfer. ID must be a valid Customer Depository account
          example: 0c5e215c
        status:
          type: string
          description: Defines the status of the Customer
          enum:
            - unverified
            - verified
            - suspended
            - deactivated
        metadata:
          type: string
          description: Additional meta data to be used for display only
          example: Authorized for re-occurring WEB
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
        updated:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    CreateDepository:
      properties:
        bankName:
          type: string
          description: Legal name of the financial institution.
          example: "MVB Bank, Inc."
        holder:
          type: string
          description: Legal holder name on the account
          example: "My Company,llc or Wade Arnold"
        holderType:
          type: string
          description: Defines the type of entity of the account holder as an *individual* or *company*
          enum:
            - individual
            - company
        type:
          type: string
          description: Defines the account as *checking* or *savings*
          enum:
            - Checking
            - Savings
          example: "checking"
        routingNumber:
          type: string
          description: The ABA routing transit number for the depository account.
          example: "051504597"
        accountNumber:
          type: string
          description: The account number for the depository account
          example: "0001027028"
        metadata:
          type: string
          description: Additional meta data to be used for display only
          example: Payroll
      required:
        - bankName
        - holder
        - holderType
        - type
        - routingNumber
        - accountNumber
    Depository:
      properties:
        id:
          type: string
          description: Depository ID
          example: 0c5e215c
        bankName:
          type: string
          description: Legal name of the financial institution.
          example: "MVB Bank, Inc."
        holder:
          type: string
          description: Legal holder name on the account
          example: "My Company,llc or Wade Arnold"
        holderType:
          type: string
          description: Defines the type of entity of the account holder as an *individual* or *company*
          enum:
            - individual
            - company
        type:
          type: string
          description: Defines the account as *checking* or *savings*
          enum:
            - Checking
            - Savings
          example: "checking"
        routingNumber:
          type: string
          description: The ABA routing transit number for the depository account.
          example: "051504597"
        accountNumber:
          type: string
          description: The account number for the depository account
          example: "0001027028"
        status:
          type: string
          description: Defines the status of the Depository account
          enum:
            - unverified
            - verified
        metadata:
          type: string
          description: Additional meta data to be used for display only
          example: Payroll
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
        updated:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
      required:
      - holder
      - holderType
      - type
      - routingNumber
      - accountNumber
    Depositories:
      type: array
      items:
        $ref: '#/components/schemas/Depository'
    CreateTransfer:
      properties:
        transferType:
          type: string
          enum:
            - "push"
            - "pull"
          example: "push"
          description: Type of transaction being actioned against the receiving institution. Expected values are pull (debits) or push (credits).
        amount:
          type: string
          format: currency
          example: "USD 99.99"
          description: Amount of money. USD - United States.
        originator:
          type: string
          example: 724b6abe
          description: ID of the Originator account initiating the transfer.
        originatorDepository:
          type: string
          example: 59276ce4
          description: ID of the Originator Depository to be be used to override the default depository.
        customer:
          type: string
          example: feb492e6
          description: ID of the Customer account the transfer was sent to.
        customerDepository:
          type: string
          example: dad7ddfb
          description: ID of the Customer Depository to be used to override the default depository
        description:
          type: string
          description: Brief description of the transaction, that may appear on the receiving entity’s financial statement
          example: Loan Pay
          minLength: 1
          maxLength: 79
        standardEntryClassCode:
          type: string
          description: Standard Entry Class code will be generated based on Customer type for CCD and PPD
          example: WEB
        sameDay:
          type: boolean
          default: false
          description: When set to true this indicates the transfer should be processed the same day if possible.
        WEBDetail:
          $ref: '#/components/schemas/WEBDetail'
        IATDetail:
          $ref: '#/components/schemas/IATDetail'
      required:
        - type
        - amount
        - customer
        - originator
        - description
    CreateTransfers:
      type: array
      items:
        $ref: '#/components/schemas/CreateTransfer'
    Transfer:
      properties:
        id:
          type: string
          description: Optional ID to uniquely identify this transfer. If omitted, one will be generated
          example: 33164ac6
        transferType:
          type: string
          enum:
            - "push"
            - "pull"
          example: "push"
          description: Type of transaction being actioned against the receiving institution. Expected values are pull (debits) or push (credits). Only one period used to signify decimal value will be included.
        amount:
          type: string
          format: currency
          example: "USD 99.99"
          description: Amount of money. USD - United States.
        originator:
          type: string
          example: 724b6abe
          description: ID of the Originator account initiating the transfer.
        originatorDepository:
          type: string
          example: 59276ce4
          description: ID of the Originator Depository to be be used to override the default depository.
        customer:
          type: string
          example: feb492e6
          description: ID of the Customer account the transfer was sent to.
        customerDepository:
          type: string
          example: dad7ddfb
          description: ID of the Customer Depository to be used to override the default depository
        description:
          type: string
          description: Brief description of the transaction, that may appear on the receiving entity’s financial statement
          example: Loan Pay
          minLength: 1
          maxLength: 79
        standardEntryClassCode:
          type: string
          description: Standard Entry Class code will be generated based on Customer type for CCD and PPD
          example: WEB
        status:
          type: string
          description: Defines the state of the Transfer
          enum:
            - processed
            - pending
            - canceled
            - failed
            - reclaimed
        sameDay:
          type: boolean
          default: false
          description: When set to true this indicates the transfer should be processed the same day if possible.
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
        WEBDetail:
          $ref: '#/components/schemas/WEBDetail'
        IATDetail:
          $ref: '#/components/schemas/IATDetail'
      required:
        - type
        - amount
        - customer
        - originator
        - description
    Transfers:
      type: array
      items:
        $ref: '#/components/schemas/Transfer'
    CreateGateway:
      properties:
        origin:
          type: string
          description: Routing Number - four digit Federal Reserve Routing Symbol and the four digit ABA Institution Identifier
          example: "99991234"
        originName:
          type: string
          description: Legal name associated with the origin routing number.
          example: My Bank Name
        destination:
          type: string
          description: Routing Number - four digit Federal Reserve Routing Symbol and the four digit ABA Institution Identifier
          example: "69100013"
        destinationName:
          type: string
          description: Legal name associated with the destination routing number
          example: Federal Reserve Bank
      required:
        - origin
        - originName
        - destination
        - destinationName
    Gateway:
      properties:
        id:
          type: string
          description: ID to uniquely identify a gateway
        origin:
          type: string
          description: Routing Number - four digit Federal Reserve Routing Symbol and the four digit ABA Institution Identifier
          example: "99991234"
        originName:
          type: string
          description: Legal name associated with the origin routing number.
          example: My Bank Name
        destination:
          type: string
          description: Routing Number - four digit Federal Reserve Routing Symbol and the four digit ABA Institution Identifier
          example: "69100013"
        destinationName:
          type: string
          description: Legal name associated with the destination routing number
          example: Federal Reserve Bank
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
      required:
        - id
        - origin
        - originName
        - destination
        - destinationName
    Gateways:
      type: array
      items:
        $ref: '#/components/schemas/Gateway'
    Event:
      properties:
        id:
          type: string
          description: ID to uniquely identify a event
          example: 94cf1126
        topic:
          type: string
          description: Type of event
          example: transfer_created
        message:
          type: string
          description: A human readable description of the topic
          example: A bank transfer was created
        type:
          type: string
          enum:
            - "Originator"
            - "Customer"
            - "Depository"
            - "Transfer"
          example: Transfers
        resource:
          type: string
          description: ID of the resource type the event was generated on behalf of.
          example: dad7ddfb-71cd-4699-add4-2867878d154f
        created:
          type: string
          format: date-time
          example: 2006-01-02T15:04:05Z07:00
    Events:
      type: array
      items:
        $ref: '#/components/schemas/Event'
    WEBDetail:
      properties:
        PaymentType:
          type: string
          description: 'TODO(adam): Defines if the transfer is authorized for a single transaction or reoccurring'
          enum:
            - "single"
            - "reoccurring"
          example: single
    IATDetail:
      properties:
        originatorName:
          type: string
          description: Name of originating entity
          example: Jane Doe
        originatorAddress:
          type: string
          description: Address of originating entity
          example: 123 1st St
        originatorCity:
          type: string
          description: City of originating entity
          example: Anytown
        originatorState:
          type: string
          description: State of originating entity
          example: PA
        originatorPostalCode:
          type: string
          description: Postal code of originating entity
          example: 12345
        originatorCountryCode:
          type: stringn
          description: ISO 3166 Country code of originating entity
          example: US
        ODFIName:
          type: string
          description: Name of originating financial institution
          example: My Bank
        ODFIIDNumberQualifier:
          type: string
          description: ID qualifier number of originating FI
          example: 01
        ODFIIdentification:
          type: string
          description: Identification of originating FI
          example: 141451
        ODFIBranchCurrencyCode:
          type: string
          description: ISO 4217 currency code of originating entity
          example: USD
        receiverName:
          type: string
          description: Name of receiving entity
          example: John Doe
        receiverAddress:
          type: string
          description: Address of originating entity
          example: 321 2nd St
        receiverCity:
          type: string
          description: City of originating entity
          example: Othertown
        receiverState:
          type: string
          description: State of originating entity
          example: GB
        receiverPostalCode:
          type: string
          description: Postal code of originating entity
          example: 54321
        receiverCountryCode:
          type: string
          description: ISO 3166 country code of originating entity
          example: GB
        RDFIName:
          type: string
          description: Name of receiving financial institution
          example: Their Bank
        RDFIIDNumberQualifier:
          type: string
          description: ID qualifier number of originating FI
          example: 01
        RDFIIdentification:
          type: string
          description: Identification of receiving financial institution
          example: 4
        RDFIBranchCurrencyCode:
          type: string
          description: ISO 4217 currency code of receiving entity
          example: GB
        foreignCorrespondentBankName:
          type: string
          description: Name of foreign bank used in IAT transfer
          example: Their Bank
        foreignCorrespondentBankIDNumberQualifier:
          type: string
          description: ID qualifier of foreign bank used
          example: 5125112
        foreignCorrespondentBankIDNumber:
          type: string
          description: ID number of foreign bank used
          example: 631551
        foreignCorrespondentBankBranchCountryCode:
          type: string
          description: ISO 3166 country code of foreign bank used
          example: GB
# continuning 'components:'
  parameters:
    cookie:
      name: cookie
      in: cookie
      schema:
        type: string
      description: moov_auth Cookie
    bearerToken:
      in: header
      name: Authorization
      description: OAuth2 Bearer token
      example: Bearer A4CA3074
      schema:
        type: string
    offsetParam:
      in: query
      name: offset
      required: false
      description: The number of items to skip before starting to collect the result set
      schema:
        type: integer
        minimum: 1
        default: 0
    limitParam:
      in: query
      name: limit
      description: The number of items to return
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 100
        default: 25
        example: 10
    idempotencyKey:
      in: header
      name: X-Idempotency-Key
      description: Idempotent key in the header which expires after 24 hours. These strings should contain enough entropy for to not collide with each other in your requests.
      example: a4f88150
      required: false
      schema:
        type: string
    requestId:
      in: header
      name: X-Request-Id
      description: Optional Request ID allows application developer to trace requests through the systems logs
      example: rs4f9915
      schema:
        type: string
    startDate:
      in: query
      name: startDate
      description: Filter objects created after this date. ISO-8601 format YYYY-MM-DD. Can optionally be used with endDate to specify a date range.
      schema:
        type: string
        format: date-time
        example: 2006-01-02T15:04:05Z07:00
    endDate:
      in: query
      name: endDate
      description: Filter objects created before this date. ISO-8601 format YYYY-MM-DD. Can optionally be used with startDate to specify a date range.
      schema:
        type: string
        format: date-time
        example: 2006-01-02T15:04:05Z07:00
